# Define environment
dist: xenial # Ubuntu 16.04
language: bash

# Export variables
env:
  global:
    - tf_version=0.12.28 tf_init_cli_options="-input=false" tf_validation_cli_options="" tf_plan_cli_options="-lock=false -input=false" tf_apply_cli_options="-auto-approve -input=false"
    - GOOGLE_APPLICATION_CREDENTIALS=~/gcloud-service-key.json
cache:
  directories:
    - "$HOME/google-cloud-sdk/"

# Only build pushes to master branch
branches:
  only:
    - master

# Install dependencies (Terraform, gcloud)
before_install:
  - wget https://releases.hashicorp.com/terraform/"$tf_version"/terraform_"$tf_version"_linux_amd64.zip
  - unzip terraform_"$tf_version"_linux_amd64.zip
  - sudo mv terraform /usr/local/bin/
  - rm terraform_"$tf_version"_linux_amd64.zip
  - if [ ! -d "$HOME/google-cloud-sdk/bin" ]; then rm -rf $HOME/google-cloud-sdk; export CLOUDSDK_CORE_DISABLE_PROMPTS=1; curl https://sdk.cloud.google.com | bash; fi
  - source /home/travis/google-cloud-sdk/path.bash.inc
  - gcloud --quiet version
  - gcloud --quiet components update
  - gcloud --quiet components update kubectl
  - echo $GCLOUD_SERVICE_KEY | base64 --decode -i > ${HOME}/gcloud-service-key.json
  - gcloud auth activate-service-account --key-file ${HOME}/gcloud-service-key.json

# Terraform Plan and Apply
# Plan only on pull requests, Apply on merged code
jobs:
  include:
    - stage: terraform init, validate, plan
      # Only run terraform validate and plan state if within a pull request
      if: type IN (pull_request)
      script:
        - echo "Executing Terraform Plan on pull request code"
        - terraform init $tf_init_cli_options
        - terraform validate $tf_validation_cli_options
        - terraform plan $tf_plan_cli_options
    - stage: terraform apply
      # Only run terraform apply stage if outside of a pull request
      if: type IN (push) and branch = master
      script:
        - echo "Executing Terraform Apply on merged code"
        - terraform init $tf_init_cli_options
        - terraform apply $tf_apply_cli_options
